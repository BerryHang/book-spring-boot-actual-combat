<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.spring.boot.mapper.TUserMapper">
  <resultMap id="BaseResultMap" type="com.learning.spring.boot.domain.entity.TUser">
    <id column="USER_ID" jdbcType="BIGINT" property="userId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="DEPT_ID" jdbcType="BIGINT" property="deptId" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="MOBILE" jdbcType="VARCHAR" property="mobile" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="CRATE_TIME" jdbcType="TIMESTAMP" property="crateTime" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="LAST_LOGIN_TIME" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="SSEX" jdbcType="CHAR" property="ssex" />
    <result column="THEME" jdbcType="VARCHAR" property="theme" />
    <result column="AVATAR" jdbcType="VARCHAR" property="avatar" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, USERNAME, `PASSWORD`, DEPT_ID, EMAIL, MOBILE, `STATUS`, CRATE_TIME, MODIFY_TIME, 
    LAST_LOGIN_TIME, SSEX, THEME, AVATAR, DESCRIPTION
  </sql>
  <select id="selectByExample" parameterType="com.learning.spring.boot.domain.entity.TUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where USER_ID = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.learning.spring.boot.domain.entity.TUserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.learning.spring.boot.domain.entity.TUser">
    insert into t_user (USER_ID, USERNAME, `PASSWORD`, 
      DEPT_ID, EMAIL, MOBILE, 
      `STATUS`, CRATE_TIME, MODIFY_TIME, 
      LAST_LOGIN_TIME, SSEX, THEME, 
      AVATAR, DESCRIPTION)
    values (#{userId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=BIGINT}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{crateTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{ssex,jdbcType=CHAR}, #{theme,jdbcType=VARCHAR}, 
      #{avatar,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.learning.spring.boot.domain.entity.TUser">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        `PASSWORD`,
      </if>
      <if test="deptId != null">
        DEPT_ID,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="mobile != null">
        MOBILE,
      </if>
      <if test="status != null">
        `STATUS`,
      </if>
      <if test="crateTime != null">
        CRATE_TIME,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME,
      </if>
      <if test="ssex != null">
        SSEX,
      </if>
      <if test="theme != null">
        THEME,
      </if>
      <if test="avatar != null">
        AVATAR,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="crateTime != null">
        #{crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ssex != null">
        #{ssex,jdbcType=CHAR},
      </if>
      <if test="theme != null">
        #{theme,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.learning.spring.boot.domain.entity.TUserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findUserWithDept" resultType="TUser"
            parameterType="com.learning.spring.boot.domain.response.User">
      select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime,
      u.ssex,d.dept_name deptName from t_user u
      left join t_dept d on(u.dept_id = d.dept_id)
      where 1=1
      <if test="username != null and username != ''">
        AND u.username = #{username}
      </if>
      <if test="deptId != null and deptId != ''">
        AND d.dept_id = #{deptId}
      </if>
      <if test="ssex != null and ssex != ''">
        AND u.ssex = #{ssex}
      </if>
      <if test="status != null and status != ''">
        AND u.status = #{status}
      </if>
      order by u.user_id
    </select>
  <select id="findUserWithRole" resultType="com.learning.spring.boot.domain.response.UserWithRole">
    select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile,
           u.status,u.ssex,ur.role_id roleId from t_user u
                                                    left join t_user_role ur on (u.user_id = ur.user_id)
    where u.user_id = #{userId}
  </select>
  <select id="findUserProfile" resultType="com.learning.spring.boot.domain.response.User"
          parameterType="com.learning.spring.boot.domain.response.User">
    SELECT
      U .USERNAME,
      U .USER_ID userId,
      D .DEPT_NAME deptName,
      U .mobile,
      U .email,
      U .avatar,
      U .description,
      U .ssex,
      U .dept_id deptId,
      group_concat(r.role_name) AS roleName
    FROM
      t_user U
        LEFT JOIN t_dept D ON U .DEPT_ID = D .DEPT_ID
        LEFT JOIN t_user_role ur ON U .user_id = ur.user_id
        LEFT JOIN t_role r ON r.role_id = ur.role_id
    WHERE
      U .USER_ID = #{userId}
    GROUP BY
      U .username,
      D .dept_name,
      U .mobile,
      U .email,
      U .avatar,
      U .description,
      U .ssex,
      U .USER_ID,
      U .dept_id
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        `PASSWORD` = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        DEPT_ID = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        MOBILE = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `STATUS` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.crateTime != null">
        CRATE_TIME = #{record.crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginTime != null">
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ssex != null">
        SSEX = #{record.ssex,jdbcType=CHAR},
      </if>
      <if test="record.theme != null">
        THEME = #{record.theme,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        AVATAR = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set USER_ID = #{record.userId,jdbcType=BIGINT},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      `PASSWORD` = #{record.password,jdbcType=VARCHAR},
      DEPT_ID = #{record.deptId,jdbcType=BIGINT},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      MOBILE = #{record.mobile,jdbcType=VARCHAR},
      `STATUS` = #{record.status,jdbcType=CHAR},
      CRATE_TIME = #{record.crateTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      SSEX = #{record.ssex,jdbcType=CHAR},
      THEME = #{record.theme,jdbcType=VARCHAR},
      AVATAR = #{record.avatar,jdbcType=VARCHAR},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.learning.spring.boot.domain.entity.TUser">
    update t_user
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `PASSWORD` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        DEPT_ID = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        MOBILE = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `STATUS` = #{status,jdbcType=CHAR},
      </if>
      <if test="crateTime != null">
        CRATE_TIME = #{crateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ssex != null">
        SSEX = #{ssex,jdbcType=CHAR},
      </if>
      <if test="theme != null">
        THEME = #{theme,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        AVATAR = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learning.spring.boot.domain.entity.TUser">
    update t_user
    set USERNAME = #{username,jdbcType=VARCHAR},
      `PASSWORD` = #{password,jdbcType=VARCHAR},
      DEPT_ID = #{deptId,jdbcType=BIGINT},
      EMAIL = #{email,jdbcType=VARCHAR},
      MOBILE = #{mobile,jdbcType=VARCHAR},
      `STATUS` = #{status,jdbcType=CHAR},
      CRATE_TIME = #{crateTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      SSEX = #{ssex,jdbcType=CHAR},
      THEME = #{theme,jdbcType=VARCHAR},
      AVATAR = #{avatar,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=BIGINT}
  </update>
</mapper>
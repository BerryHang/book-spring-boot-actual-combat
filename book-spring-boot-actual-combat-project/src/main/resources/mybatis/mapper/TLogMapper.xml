<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.spring.boot.mapper.TLogMapper">
  <resultMap id="BaseResultMap" type="com.learning.spring.boot.domain.entity.TLog">
    <id column="ID" jdbcType="BIGINT" property="id" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="OPERATION" jdbcType="VARCHAR" property="operation" />
    <result column="TIME" jdbcType="DECIMAL" property="time" />
    <result column="IP" jdbcType="VARCHAR" property="ip" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="location" jdbcType="VARCHAR" property="location" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.learning.spring.boot.domain.entity.TLogWithBLOBs">
    <result column="METHOD" jdbcType="LONGVARCHAR" property="method" />
    <result column="PARAMS" jdbcType="LONGVARCHAR" property="params" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, USERNAME, `OPERATION`, `TIME`, IP, CREATE_TIME, `location`
  </sql>
  <sql id="Blob_Column_List">
    `METHOD`, PARAMS
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.learning.spring.boot.domain.entity.TLogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="com.learning.spring.boot.domain.entity.TLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_log
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_log
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.learning.spring.boot.domain.entity.TLogExample">
    delete from t_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.learning.spring.boot.domain.entity.TLogWithBLOBs">
    insert into t_log (ID, USERNAME, `OPERATION`, 
      `TIME`, IP, CREATE_TIME, 
      `location`, `METHOD`, PARAMS
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{operation,jdbcType=VARCHAR}, 
      #{time,jdbcType=DECIMAL}, #{ip,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{location,jdbcType=VARCHAR}, #{method,jdbcType=LONGVARCHAR}, #{params,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.learning.spring.boot.domain.entity.TLogWithBLOBs">
    insert into t_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="operation != null">
        `OPERATION`,
      </if>
      <if test="time != null">
        `TIME`,
      </if>
      <if test="ip != null">
        IP,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="method != null">
        `METHOD`,
      </if>
      <if test="params != null">
        PARAMS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DECIMAL},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=LONGVARCHAR},
      </if>
      <if test="params != null">
        #{params,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.learning.spring.boot.domain.entity.TLogExample" resultType="java.lang.Long">
    select count(*) from t_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_log
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.operation != null">
        `OPERATION` = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        `TIME` = #{record.time,jdbcType=DECIMAL},
      </if>
      <if test="record.ip != null">
        IP = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        `location` = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null">
        `METHOD` = #{record.method,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.params != null">
        PARAMS = #{record.params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_log
    set ID = #{record.id,jdbcType=BIGINT},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      `OPERATION` = #{record.operation,jdbcType=VARCHAR},
      `TIME` = #{record.time,jdbcType=DECIMAL},
      IP = #{record.ip,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      `location` = #{record.location,jdbcType=VARCHAR},
      `METHOD` = #{record.method,jdbcType=LONGVARCHAR},
      PARAMS = #{record.params,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_log
    set ID = #{record.id,jdbcType=BIGINT},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      `OPERATION` = #{record.operation,jdbcType=VARCHAR},
      `TIME` = #{record.time,jdbcType=DECIMAL},
      IP = #{record.ip,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      `location` = #{record.location,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.learning.spring.boot.domain.entity.TLogWithBLOBs">
    update t_log
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="operation != null">
        `OPERATION` = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        `TIME` = #{time,jdbcType=DECIMAL},
      </if>
      <if test="ip != null">
        IP = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        `METHOD` = #{method,jdbcType=LONGVARCHAR},
      </if>
      <if test="params != null">
        PARAMS = #{params,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.learning.spring.boot.domain.entity.TLogWithBLOBs">
    update t_log
    set USERNAME = #{username,jdbcType=VARCHAR},
      `OPERATION` = #{operation,jdbcType=VARCHAR},
      `TIME` = #{time,jdbcType=DECIMAL},
      IP = #{ip,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      `location` = #{location,jdbcType=VARCHAR},
      `METHOD` = #{method,jdbcType=LONGVARCHAR},
      PARAMS = #{params,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.learning.spring.boot.domain.entity.TLog">
    update t_log
    set USERNAME = #{username,jdbcType=VARCHAR},
      `OPERATION` = #{operation,jdbcType=VARCHAR},
      `TIME` = #{time,jdbcType=DECIMAL},
      IP = #{ip,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      `location` = #{location,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>